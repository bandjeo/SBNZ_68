package sbnz.cep_rules;
dialect  "mvel"

import com.sbnz.covid19cdss.model.Test
import com.sbnz.covid19cdss.model.TestsReview
import java.util.List


declare Test
    @role(event)
    @timestamp(timestamp)
end

query getLatestNegative(Number retval, List list)
    retval:= Number() from accumulate(Test($timestamp: timestamp, result == false) from list,
                max($timestamp))
end

rule "Last test negative"
    when
        $list: List() from collect(Test())
        getLatestNegative($latestNegative, $list;)
        $latestNegativeTest: Test(timestamp == $latestNegative)

        not(exists(Test(result == true, this after $latestNegativeTest)))

        exists(Test(this before[20s] $latestNegativeTest, result == false))

        $otherList: List() from collect(Test(this before[20s] $latestNegativeTest))
        getLatestNegative($otherNegative, $otherList;)
        $otherNegativeTest: Test(timestamp == $otherNegative)

        not(exists(Test(result == true, this after $otherNegativeTest)))

        $tr: TestsReview()
    then
        $tr.setDischarge(true);
end